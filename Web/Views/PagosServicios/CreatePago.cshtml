@model Web.ViewModel.PagoServicoDto

@{
    ViewData["Title"] = "Pagar" + Model.Name;
    ViewData["Modulo"] = "Pagos de Servicios";
    ViewData["IdRol"] = "1";
}


<div class="card">
    <div class="card-header border-0">
        <h2 class="card-title">@Model.Name</h2>
    </div>

    <div class="card-body">
        @using (Html.BeginForm("SavePago", "PagosServicios", FormMethod.Post))
        {
            @Html.HiddenFor(x => x.ServicioHeaderId)
    
            @Html.HiddenFor(x => x.IdServicioList)

            switch (Model.ServicioHeaderId)
            {
                case 1:
                    <div class="form-group">
                        <label for="ReferenciaPago">Nic</label>
                        @Html.TextBoxFor(x => x.ReferenciaPago, new { @class = "form-control" })
                        <br />
                        @Html.ValidationMessageFor(x => x.ReferenciaPago)
                    </div>
                    break;
                case 2:
                    <div class="form-group">
                        <label for="ReferenciaPago">Nic</label>
                        @Html.TextBoxFor(x => x.ReferenciaPago, new { @class = "form-control" })
                        <br />
                        @Html.ValidationMessageFor(x => x.ReferenciaPago)
                    </div>
                    break;
                case 3:
                    <div class="form-group">
                        <label for="ReferenciaPago">Numero de contrato</label>
                        @Html.TextBoxFor(x => x.ReferenciaPago, new { @class = "form-control" })
                        <br />
                        @Html.ValidationMessageFor(x => x.ReferenciaPago)
                    </div>
                    break;
                case 4:
                    <div class="form-group">
                        <label for="ReferenciaPago">Matricula</label>
                        @Html.TextBoxFor(x => x.ReferenciaPago, new { @class = "form-control" })
                        <br />
                        @Html.ValidationMessageFor(x => x.ReferenciaPago)
                    </div>
                    break;
                case 5:
                    <div class="form-group">
                        <label for="ReferenciaPago">Numero de contrato</label>
                        @Html.TextBoxFor(x => x.ReferenciaPago, new { @class = "form-control" })
                        <br />
                        @Html.ValidationMessageFor(x => x.ReferenciaPago)
                    </div>
                    break;
                case 6:
                    <div class="form-group">
                        <label for="ReferenciaPago">Numero de telefono</label>
                        @Html.TextBoxFor(x => x.ReferenciaPago, new { @class = "form-control" })
                        <br />
                        @Html.ValidationMessageFor(x => x.ReferenciaPago)
                    </div>
                    break;



            }


            <div class="form-group">
                <label for="Monto">Monto</label>
                @Html.TextBoxFor(x => x.Monto, new { @class = "form-control", @readonly = "true" })

            </div>


            <button type="submit" class="btn btn-success float-right"><i class="far fa-money-bill-alt"></i> Pagar</button>
        }

    </div>

    <div class="card-footer py-4">

        <a href="@Url.Action("Index","PagosServicios")" class="btn btn-danger float-right">Atras</a>
        @*<button type="button" data-toggle="modal" data-target="#myModal">Launch modal</button>*@
    </div>
</div>







@section scripts
        {

    <script src="~/js/pagoServicioIndex.js"></script>

    <script>
        let GetServicosById = '@Url.Action("GetServicoById", "PagosServicios")';
    </script>

}